{"version":3,"sources":["static/42675.svg","static/1437380.svg","container/HomePage/style.js","component/Navbar/style.js","component/Navbar/index.tsx","container/HomePage/index.tsx","container/App/style.js","container/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","HomePagaContainer","styled","div","NavbarContainer","NavbarComponent","Navbar","expand","Collapse","id","className","Nav","Link","href","to","type","HomePage","src","swirl1","style","width","height","speed","Delay","ms","Backspace","count","swirl2","AppContainer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,m/BCEpC,IAAMC,EAAoBC,IAAOC,IAAV,K,gkCCAvB,IAAMC,EAAkBF,IAAOC,IAAV,K,wBCuEbE,EAnEmB,WAC9B,OACI,kBAACD,EAAD,KACI,kBAACE,EAAA,EAAD,CAAQC,OAAO,MAEX,kBAACD,EAAA,EAAOE,SAAR,CAAiBC,GAAG,oBAChB,yBAAKC,UAAU,aACX,kBAACC,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACC,EAAA,EAAIC,KAAL,CAAUC,KAAK,KACX,kBAAC,IAAD,CAAMC,GAAG,KACL,4BACIC,KAAK,SACLL,UAAU,sBAFd,UASR,kBAACC,EAAA,EAAIC,KAAL,CAAUC,KAAK,UACX,kBAAC,IAAD,CAAMC,GAAG,UACL,4BACIC,KAAK,SACLL,UAAU,qBAFd,cAQR,kBAACC,EAAA,EAAIC,KAAL,CAAUC,KAAK,eACX,kBAAC,IAAD,CAAMC,GAAG,eACL,4BACIC,KAAK,SACLL,UAAU,qBAFd,gBAQR,kBAACC,EAAA,EAAIC,KAAL,CAAUC,KAAK,eACX,kBAAC,IAAD,CAAMC,GAAG,eACL,4BACIC,KAAK,SACLL,UAAU,qBAFd,gBAQR,kBAACC,EAAA,EAAIC,KAAL,CAAUC,KAAK,YACX,kBAAC,IAAD,CAAMC,GAAG,YACL,4BACIC,KAAK,SACLL,UAAU,qBAFd,sB,mDCfrBM,EAnCmB,WAC9B,OACI,kBAACf,EAAD,KACI,kBAAC,EAAD,MACA,yBAAKS,UAAU,UACX,yBAAKO,IAAKC,IAAQC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAEtD,yBAAKX,UAAU,QACX,yBAAKA,UAAU,WACX,gDACA,kBAAC,IAAD,CAAQY,MAAO,IACX,oCAEI,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MAClB,4DACA,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,KACzB,kBAAC,IAAOH,MAAR,CAAcC,GAAI,MAClB,6CACA,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,KACzB,kBAAC,IAAOH,MAAR,CAAcC,GAAI,MAClB,4DACA,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,KACzB,kBAAC,IAAOH,MAAR,CAAcC,GAAI,MAClB,kEAKhB,yBAAKd,UAAU,UACX,yBAAKO,IAAKU,IAAQR,MAAO,CAAEC,MAAO,OAAQC,OAAQ,a,gaClC3D,IAAMO,EAAe1B,IAAOC,IAAV,K,OCkCV0B,EAzBO,WASlB,OACI,kBAAC,IAAD,KACI,kBAACD,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjC,kBAAC,IAAD,CAAOe,KAAK,cAAcC,UAAWhB,QCbrCiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d11ef0da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/42675.bb55d1e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/1437380.59fa2ad0.svg\";","import styled from \"styled-components\";\n\nexport const HomePagaContainer = styled.div`\n    .asset1 {\n        z-index: 2;\n        position: relative;\n        width: 20vw;\n        display: flex;\n        justify-content: flex-start;\n    }\n\n    .asset2 {\n        display: flex;\n        justify-content: flex-end;\n        position: relative;\n        z-index: 1;\n        margin-right: -50px;\n        /* .image2 {\n            display: flex;\n            align-items: flex-end;\n        } */\n    }\n\n    .home {\n        display: flex;\n        justify-content: center;\n        h1 {\n            font-size: 55px;\n        }\n        .content {\n            display: flex;\n            flex-direction: column;\n\n            p {\n                text-align: center;\n                font-size: 25px;\n            }\n        }\n    }\n`;\n","import styled from \"styled-components\";\n\nexport const NavbarContainer = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    top: 0;\n    background-color: white;\n    width: 100vw;\n    height: 4rem;\n    z-index: 1;\n    button {\n        font-family: \"Nanum Myeongjo\";\n        font-size: 20px;\n        border: 2px solid #121212;\n        margin-right: 5px;\n        background-color: white;\n        box-shadow: 8px 5px #18314f;\n    }\n\n    /* &:hover {\n        .btn {\n            background-color: black;\n            color: white;\n        }\n    } */\n\n    /* &:active {\n        button {\n            background-color: black;\n            color: white;\n        }\n    } */\n\n    .container {\n        display: flex;\n        justify-content: flex-end;\n    }\n\n    @media only screen and (max-width: 600px) {\n        .row {\n            width: 100%;\n        }\n\n        .btn {\n            margin-right: 2%;\n            font-size: 3vw;\n        }\n\n        .col-sl-2 .btn {\n            width: 21vw;\n            font-size: 2vw;\n        }\n    }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { NavbarContainer } from \"./style\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nconst NavbarComponent: React.FC = () => {\n    return (\n        <NavbarContainer>\n            <Navbar expand=\"lg\">\n                {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\" /> */}\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <div className=\"container\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link href=\"/\">\n                                <Link to=\"/\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-default b \"\n                                    >\n                                        Home\n                                    </button>\n                                </Link>\n                            </Nav.Link>\n\n                            <Nav.Link href=\"/about\">\n                                <Link to=\"/about\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-default b\"\n                                    >\n                                        About Me\n                                    </button>\n                                </Link>\n                            </Nav.Link>\n                            <Nav.Link href=\"/portofolio\">\n                                <Link to=\"/portofolio\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-default b\"\n                                    >\n                                        Experience\n                                    </button>\n                                </Link>\n                            </Nav.Link>\n                            <Nav.Link href=\"/portofolio\">\n                                <Link to=\"/portofolio\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-default b\"\n                                    >\n                                        Portofolio\n                                    </button>\n                                </Link>\n                            </Nav.Link>\n                            <Nav.Link href=\"/contact\">\n                                <Link to=\"/contact\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn btn-default b\"\n                                    >\n                                        Contact Me\n                                    </button>\n                                </Link>\n                            </Nav.Link>\n                        </Nav>\n                    </div>\n                </Navbar.Collapse>\n            </Navbar>\n        </NavbarContainer>\n    );\n};\n\nexport default NavbarComponent;\n","import React, { useState, useEffect } from \"react\";\nimport { HomePagaContainer } from \"./style\";\nimport NavbarComponent from \"../../component/Navbar\";\nimport swirl1 from \"../../static/42675.svg\";\nimport swirl2 from \"../../static/1437380.svg\";\nimport Typing from \"react-typing-animation\";\n\nexport const HomePage: React.FC = () => {\n    return (\n        <HomePagaContainer>\n            <NavbarComponent />\n            <div className=\"asset1\">\n                <img src={swirl1} style={{ width: \"20vw\", height: \"30vh\" }} />\n            </div>\n            <div className=\"home\">\n                <div className=\"content\">\n                    <h1>Hello! I'm Nasya</h1>\n                    <Typing speed={70}>\n                        <p>\n                            I'm a,\n                            <Typing.Delay ms={2000} />\n                            <span> future Software Engineer.</span>\n                            <Typing.Backspace count={19} />\n                            <Typing.Delay ms={2000} />\n                            <span> Developer.</span>\n                            <Typing.Backspace count={20} />\n                            <Typing.Delay ms={2000} />\n                            <span> going to make difference.</span>\n                            <Typing.Backspace count={25} />\n                            <Typing.Delay ms={2000} />\n                            <span> a future Software Engineer.</span>\n                        </p>\n                    </Typing>\n                </div>\n            </div>\n            <div className=\"asset2\">\n                <img src={swirl2} style={{ width: \"20vw\", height: \"40vh\" }} />\n            </div>\n        </HomePagaContainer>\n    );\n};\n\nexport default HomePage;\n","import styled from \"styled-components\";\n\nexport const AppContainer = styled.div`\n    font-family: \"Montserrat\";\n\n    .container {\n        margin-top: 4rem;\n        margin-left: auto;\n        width: calc(100vw - 5rem);\n        padding: 1.5rem;\n    }\n\n    @media screen and (max-width: 992px) {\n        .container {\n            margin-top: 0;\n            margin-left: 0;\n            width: 100%;\n        }\n    }\n`;\n","import React from \"react\";\nimport logo from \"./../../static/logo.svg\";\nimport \"./App.css\";\nimport { theme } from \"./theme\";\nimport { routes } from \"./routes\";\nimport { ThemeProvider } from \"styled-components\";\nimport HomePage from \"../HomePage\";\nimport { AppContainer } from \"./style\";\nimport NavbarComponent from \"../../component/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst App: React.FC = () => {\n    // const pages = routes.map((route) => (\n    //     <Route\n    //         key={route.component}\n    //         component={route.component}\n    //         exact={route.exact}\n    //         path={route.path}\n    //     />\n    // ));\n    return (\n        <Router>\n            <AppContainer>\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/portofolio\" component={HomePage} />\n                    {/* <Route path=\"/about\" component={Homepage} />\n                    <Route path=\"/contact\" component={Homepage} /> */}\n                </Switch>\n\n                {/* <HomePage /> */}\n            </AppContainer>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./container/App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}